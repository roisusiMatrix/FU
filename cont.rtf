{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #!/usr/bin/env node\
\
const fs = require('fs');\
const path = require('path');\
const https = require('https');\
\
const CONFIG_FILES = [\
  '.prettierrc',\
  'eslint.config.mjs',\
  '.gitignore',\
  'tsconfig.base.json'\
];\
\
const TEMPLATE_DIR = 'https://raw.githubusercontent.com/your-org/mfe-configs/main/template/';\
\
const downloadFile = (url, dest) => \{\
  return new Promise((resolve, reject) => \{\
    const file = fs.createWriteStream(dest);\
    https.get(url, (response) => \{\
      response.pipe(file);\
      file.on('finish', () => \{\
        file.close(resolve);\
      \});\
    \}).on('error', (err) => \{\
      fs.unlink(dest, () => reject(err));\
    \});\
  \});\
\};\
\
const setupMfe = async () => \{\
  console.log('Setting up MFE configuration...');\
  const rootDir = process.cwd();\
\
  for (const file of CONFIG_FILES) \{\
    const filePath = path.join(rootDir, file);\
    const fileUrl = `$\{TEMPLATE_DIR\}$\{file\}`;\
    console.log(`Downloading $\{file\}...`);\
    await downloadFile(fileUrl, filePath);\
  \}\
\
  console.log('Configuration files added!');\
\};\
\
setupMfe().catch((err) => \{\
  console.error(`Error setting up MFE: $\{err.message\}`);\
  process.exit(1);\
\});\
\
\
\
\
\
\
\
}